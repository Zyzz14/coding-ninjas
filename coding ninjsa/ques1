#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

vector<pair<int, int>> twoSum(vector<int>& arr, int target) {
    unordered_map<int, int> seen;
    vector<pair<int, int>> result;

    for (int i = 0; i < arr.size(); ++i) {
        int complement = target - arr[i];
        if (seen.find(complement) != seen.end()) {
            result.push_back({complement, arr[i]});
        }
        seen[arr[i]] = i;
    }

    if (result.empty()) {
        result.push_back({-1, -1});
    }

    return result;
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int N, target;
        cin >> N >> target;
        vector<int> arr(N);
        for (int i = 0; i < N; ++i) {
            cin >> arr[i];
        }

        vector<pair<int, int>> result = twoSum(arr, target);
        for (auto& p : result) {
            cout << p.first << " " << p.second << endl;
        }
    }
    return 0;
}
