#include <iostream>
#include <vector>

using namespace std;

void ninjaAndSortedArrays(vector<int>& arr1, vector<int>& arr2, int m, int n) {
    // Pointers for arr1, arr2, and the merged array
    int i = m - 1;       // Pointer for the end of elements in arr1
    int j = n - 1;       // Pointer for the end of elements in arr2
    int k = m + n - 1;   // Pointer for the end of the merged array in arr1

    // Merge arr1 and arr2 from the end
    while (i >= 0 && j >= 0) {
        if (arr1[i] > arr2[j]) {
            arr1[k--] = arr1[i--];
        } else {
            arr1[k--] = arr2[j--];
        }
    }

    // Copy any remaining elements from arr2 to arr1
    while (j >= 0) {
        arr1[k--] = arr2[j--];
    }
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int m, n;
        cin >> m >> n;
        vector<int> arr1(m + n);
        vector<int> arr2(n);
        for (int i = 0; i < m; ++i) {
            cin >> arr1[i];
        }
        for (int i = 0; i < n; ++i) {
            cin >> arr2[i];
        }

        ninjaAndSortedArrays(arr1, arr2, m, n);

        for (int i = 0; i < m + n; ++i) {
            cout << arr1[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
